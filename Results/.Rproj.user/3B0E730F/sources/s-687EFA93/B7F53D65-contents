---
title: "Advanced Stats Homework 2"
author: "University of Glasgow, School of Psychology"
date: "`r format(Sys.time(), '%d %B, %Y')`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
## don't modify this function
round_p <- function(p) {
  if (!is.null(p)) {
    rounded <- round(p, 3)
    operator <- ifelse(rounded == 0, "<", "=")
    rounded <- ifelse(rounded == 0, .001, rounded)
    paste("$p$", operator, rounded)
  } else {
    ""
  }
}
## don't modify the code above ^^^^^
```

## Instructions

Leave everything above this section in the file.

Save this file in your working directory as an .Rmd file. Ensure you save it in the same location where you put the .csv files you will use for this assignment.  

You should then set your working directory for the console to point to this same location (from the pulldown menu, select Session | Set Working Directory...). 

*NOTE*: in all of the problems below, you will need to replace `NULL` with a value or some code that computes a value, vector, or table.  Feel free to add any additional code you think you might need inside these blocks.  When altering code inside the code blocks, please *do not* re-order or rename the code blocks (T1, T2, ... etc.).  Also, **do not rename any code blocks or the variable names you are given within the code blocks!**  If you do, this will impact your grade!  If you have changed these things and complain to us that this affected your grade despite the code being correct, *we will send you back to re-read this paragraph*.

**Strive to make your report reproducible.**  This means: define all values using code, rather than typing in a number, such that if the underlying data were to change, it would still give you a correct (but possibly different result).

It's also recommended that you "Knit" a report to be able to see what you've accomplished and spot potential errors.  Make sure the file compiles to HTML *without errors* before you submit.  **BUT DO NOT SUBMIT THE HTML version**: submit the RMarkdown (.Rmd) script with your answers, using the link provided on the Moodle page.  

Some resources that you may find helpful in completing the assignment:

- [RStudio IDE cheatsheet](https://github.com/rstudio/cheatsheets/raw/master/rstudio-ide.pdf)
- [RStudio data import cheatsheet](https://github.com/rstudio/cheatsheets/raw/master/data-import.pdf)
- [RStudio data transformation cheatsheet](https://github.com/rstudio/cheatsheets/raw/master/data-transformation.pdf)
- [RStudio data visualization cheatsheet](https://github.com/rstudio/cheatsheets/raw/master/data-visualization-2.1.pdf)
- [RMarkdown Reference Guide](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)

Also remember that you can get help for any function `?pkgname::function_name` in the console.  For example to get help on `read_csv()` in `dplyr`, you would type `?dplyr::read_csv`.  If `dplyr` is already loaded (e.g., because you have loaded the `tidyverse` package), then you would only need to type `?read_csv`.  (But don't put any of your attempts to use the help system in your RMarkdown file!)

## Homework Tasks

For this assignment, you will be working with the Statistical Anxiety Rating Scale (STARS), which was administered three times: once in year 2, once at the beginning of the Autumn term in Year 3, and once at the end of the Autumn term in Year 3. These are referred to as waves 1, 2, and 3 respectively. The dataset is `stars.csv` and is available at http://talklab.psy.gla.ac.uk/adv_stats/hw02/stars.csv.  

The STARS survey has six subscales, defined in the file `subscales.csv` (http://talklab.psy.gla.ac.uk/adv_stats/hw02/subscales.csv), representing different aspects of statistics that students might be anxious about.

You will also need the data from `homework 1`, which contains (your personalized) subsample of grades for the course.  Place that in the same directory as your RMarkdown file, and the `stars.csv` and `subscales.csv` files.  **IMPORTANT! Do not rename your .csv files; make sure they have the names `stars.csv`, `subscales.csv`, and whatever name your homework 1 files were given.**  

To give an overview of this assignment, you will calculate subscale scores for each student on the STARS survey, plot the results, and estimate linear regression models relating software use (R or SPSS) to course performance (as measured by final score).

## Task 1

First, load in any libraries you need in the code chunk below.  Suppress any messages that come about when loading packages so that they don't appear in your knitted report (see the [RMarkdown Reference Guide](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)).

```{r T1, message = FALSE}
## TODO: load libraries
```


## Task 2

Load the data from the CSV files into the corresponding variables.  Use the `read_csv()` function from the `dplyr` package in the `tidyverse`.  Do *NOT* use `read.csv()` from base R.  

**Ensure the files are in the same directory with this .Rmd file, and use relative paths, not absolute paths.**  Suppress any messages that come about when loading in the data so that they don't appear in your knitted report.

Make sure the column `SID` is loaded in as type `character`, not `integer`.  See `?read_csv` for details.

```{r T2, message = FALSE}
stars <- NULL

subscales <- NULL

hw <- NULL # from HW1

exam <- NULL # from HW1

software <- NULL # from HW1
```

## Task 3

Include code below to calculate a table containing final grades for each student (each `SID`).  The resulting table `final` should the variables `SID` (of type `character`) with the student IDs and `fscore` (of type `double` or `dbl`) containing the final grade for the course.  The final grade should be calculated in the manner required from the previous homework assignment (40% weight for homework after dropping lowest score, 60% weight for exam).  You can re-use code from that assignment, but make sure that the code you use is correct.

```{r T3}
## TODO: put any additional code you need here, before the final <- NULL line
## process the homework grades, calculate homework means


final <- NULL
```

## Task 4

**For tasks 4-6 you will be working with the data in `stars`.**

How many students completed at least one wave of the survey?  The answer `one_wave` should be a single number, *not a table*.  To get this value, you will need to make tables along the way and then pull out what you need from any resulting table.  Use the `dplyr` one-table verbs to calculate the result.

```{r T4}
one_wave <- NULL
```

## Task 5

How many students in `stars` completed each wave of the survey?  Each answer should be a single value (you might want to make a table first and then extract values from the table).

```{r T5}
## TODO add any additional code you need here


## stub
completed_wave_1 <- NULL  # single value, not a table
completed_wave_2 <- NULL  # single value
completed_wave_3 <- NULL  # single value
```

## Task 6

How many students completed *BOTH* waves 2 and 3?  Your answer should be a *single number*, not a table.

```{r T6}
completed_both <- NULL
```

If you have defined `one_wave` correctly, then the paragraph below will automatically show the right values when you knit the RMarkdown file to html.  If not, fix your code, don't change anything in the paragraph!

---

*A total of `r one_wave` students completed at least one wave of the survey, with `r completed_wave_1` students completing wave one, `r completed_wave_2` students completing wave two, and `r completed_wave_3` students completing wave three. `r completed_both` of the students who completed wave two also completed wave three.*

---

## Task 7

Wrangle the `STARS` data into subscales, calculating a mean for each student on each subscale (collapsing over waves).  The result `sub_stars` should be a table, containing at least the columns `SID` (a variable of type `character`), `scale_name` (type `character`) and `m_score` (type `double (dbl)`, and contains the mean score for each student).

```{r T7}
substars <- NULL
```

## Task 8

Using `substars`, create a violin plot of the average anxiety for each subscale, including the original data points on the plot.  Use functions in the `ggplot2` package, which is part of the tidyverse.  See the [RStudio data visualization cheatsheet](https://github.com/rstudio/cheatsheets/raw/master/data-visualization-2.1.pdf).

```{r T8}
## TODO: something with ggplot()
```

## Task 9

Perform a simple linear regression predicting final course grade (as computed above) from software use (SPSS vs. R), store the result in `mod`, and print the output using `summary()`.

```{r T9}
## TODO: add any additional code you need here

mod <- NULL

summary(mod)
```

## Task 10

Now use `anova()` to compute an $F$-ratio for the model, then `broom::tidy()` to extract statistics from the resulting object into the table `anova_results`.  From this table, extract the $F$-ratio in `F_ratio`, the numerator degrees of freedom in `df_num`, the denominator degrees of freedom `df_denom`, and the $p$-value in `p_val`.

```{r}
## TODO: run anova() on mod
mod_anova <- NULL 

## TODO: tidy mod_anova into a table
anova_results <- NULL

f_ratio <- NULL  # replace with code
df_num <- NULL  # replace with code
df_denom <- NULL   # replace with code
p_val <- NULL   # replace with code
```

If you have done this correctly, the sentence below should automatically show the correct values when you knit.  If it doesn't, fix your code, don't change the sentence below!

---

*A linear regression was performed to test the relationship between software use and course performance.  The relationship was `r ifelse(p_val < .05, "significant", "not significant")`, $F$(`r df_num`, `r df_denom`) = `r round(ifelse(is.null(f_ratio), 0, f_ratio), 2)`, `r round_p(p_val)`.*

---

## Submit your assignment

Remember to submit your assignment through Moodle, in RMarkdown format (`.Rmd`) by your deadline (see Moodle). **Make sure you submit as an .Rmd file and nothing else**