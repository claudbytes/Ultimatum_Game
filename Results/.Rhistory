(16*0.3) + (19*0.4) + (20*0.3)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Maxi/Maxi Trial")
library(tidyverse)
library(lme4)
library(Matrix)
library(nlme)
results = list.files(pattern = ".csv")
data = lapply(results, read.csv, header = FALSE, stringsAsFactors = FALSE)
data_frame <- do.call("rbind", data)
data_frame <- data_frame[-1: -2, ] %>%  ## remove first 2 rows (completion code)
select(V2, V27, V28, V29, V33, V34)  ## and select relevant columns
colnames(data_frame) <- data_frame[1,]   ####### set the first row to be the header of the data frame
final_data <- data_frame[-1, ]
final_data <- filter(final_data, trialNo != "na", trialNo != "", trialNo != "trialNo")
final_data <- final_data %>%  # add a column for sujb_id, 275 represents n° of trials per participant
mutate("subj_id" = rep(1:31,each=275))   ### change 5 with actual number of participants
final_data$RT <- as.numeric(final_data$RT)  ### set some variables to be as.numeric for future things
final_data$response <- as.numeric(final_data$response)
ultimatum <- final_data %>%   ## create a dataframe with only UltimatumGame results
group_by(subj_id) %>%   #### recode response as acceptance -> accepted=1, rejected = 0
filter(game == "ultimatum") %>%
mutate(acceptance = if_else(response == 1, 0L, 1L)) %>%
mutate(RT_S = RT / 1000) %>%
select(subj_id, everything())
ultim_summary <- ultimatum %>%    #### descriptive statistics
group_by(stim_type, offer) %>%
summarise(p = mean(acceptance),
sd = sd(acceptance))
col_plot <- ggplot(ultim_summary, aes(x = stim_type, y = p, fill = stim_type)) + geom_col() +
facet_grid(~offer)
print(col_plot)
accepted_only <- ultimatum %>%
filter(acceptance == 1) %>%
group_by(offer) %>%
count(acceptance) %>%
mutate(perc = n/2325*100)
accepted_only_2 <- ultimatum %>%
filter(acceptance == 1) %>%
group_by(offer, stim_type) %>%
count(acceptance)
united <- full_join(accepted_only, accepted_only_2, by = "offer") %>%
select(offer, stim_type, n.x, perc, n.y) %>%
group_by(offer, stim_type)
acceptance_rates <- vector("numeric", length = length(united$n.y))
for (i in 1:length(united$n.y)) {
count <- (united[i, "n.y"])
tot <- (united [i, "n.x"])
acceptance_rates[i] <- count/tot*100
print(acceptance_rates)
}
rates <- do.call(rbind.data.frame, acceptance_rates)
colnames(rates) <- "acceptance_rates"
united["acceptance_rates"] <- rates$acceptance_rates
acceptance_overall <- ggplot(accepted_only, aes(x = offer, y = perc, fill = offer)) + geom_col() + coord_cartesian(ylim = c(0,100))
print(acceptance_overall)
acceptance_stim <- ggplot(united, aes(x = stim_type, y = acceptance_rates, fill = stim_type)) + geom_col() +
facet_grid(~offer)
print(acceptance_stim)
print(col_plot)
View(ultim_summary)
knitr::opts_chunk$set(echo = TRUE)
trust <- final_data %>%
group_by(subj_id) %>%
filter(game == "trust") %>%
mutate(rating_binned = floor((response *.5 )/2)) %>%
mutate(rating_binned2 = ifelse(response <=4, 1,
ifelse(response %in% 5:7, 2,
ifelse(response >= 8, 3, 0)))) %>%
mutate(rating1 = ifelse(response <= 4, .5, -.5 ),
rating2 = ifelse(response == 7 | response == 6| response ==5, .5, -.5),
rating3 = ifelse(response >= 8, .5,-.5))
trust <- final_data %>%
group_by(subj_id) %>%
filter(game == "trust") %>%
mutate(rating_binned = floor((response *.5 )/2)) %>%
mutate(rating_binned2 = ifelse(response <=4, 1,
ifelse(response %in% 5:7, 2,
ifelse(response >= 8, 3, 0)))) %>%
mutate(rating1 = ifelse(response <= 4, .5, -.5 ),
rating2 = ifelse(response == 7 | response == 6| response ==5, .5, -.5), rating3 = ifelse(response >= 8, .5,-.5))
setwd("~/Maxi/Maxi Trial")
library(tidyverse)
library(lme4)
results = list.files(pattern = ".csv")
data = lapply(results, read.csv, header = FALSE, stringsAsFactors = FALSE)
data_frame <- do.call("rbind", data)
results = list.files(pattern = ".csv")
data = lapply(results, read.csv, header = FALSE, stringsAsFactors = FALSE)
data_frame <- do.call("rbind", data)
data_frame <- data_frame[-1: -2, ] %>%  ## remove first 2 rows (completion code)
select(V2, V7, V27, V28, V29, V33, V34)  ## and select relevant columns
colnames(data_frame) <- data_frame[1,]   ####### set the first row to be the header of the data frame
final_data <- data_frame[-1, ]
final_data <- filter(final_data, trialNo != "na", trialNo != "", trialNo != "trialNo")
final_data <- final_data %>%  # add a column for sujb_id, 275 represents n° of trials per participant
mutate("subj_id" = rep(1:31,each=275))   ### change 5 with actual number of participants
final_data$RT <- as.numeric(final_data$RT)  ### set some variables to be as.numeric for future things
final_data$response <- as.numeric(final_data$response)
ultimatum <- final_data %>%   ## create a dataframe with only UltimatumGame results
group_by(subj_id) %>%   #### recode response as acceptance -> accepted=1, rejected = 0
filter(game == "ultimatum") %>%
mutate(acceptance = if_else(response == 1, 0L, 1L)) %>%
mutate(RT_S = RT / 1000) %>%
select(subj_id, everything())
ultim_summary <- ultimatum %>%    #### descriptive statistics
group_by(stim_type, offer) %>%
summarise(p = mean(acceptance),
sd = sd(acceptance))
col_plot <- ggplot(ultim_summary, aes(x = stim_type, y = p, fill = stim_type)) + geom_col() +
facet_grid(~offer)
print(col_plot)
accepted_only <- ultimatum %>%
filter(acceptance == 1) %>%
group_by(offer) %>%
count(acceptance) %>%
mutate(perc = n/2325*100)
accepted_stim <- ultimatum %>%
filter(acceptance == 1) %>%
group_by(stim_type)%>%
summarise(mean = mean(acceptance), SD = sd(acceptance))
accepted_only_2 <- ultimatum %>%
filter(acceptance == 1) %>%
group_by(offer, stim_type) %>%
count(acceptance)
united <- full_join(accepted_only, accepted_only_2, by = "offer") %>%
select(offer, stim_type, n.x, perc, n.y) %>%
group_by(offer, stim_type)
acceptance_rates <- vector("numeric", length = length(united$n.y))
for (i in 1:length(united$n.y)) {
count <- (united[i, "n.y"])
tot <- (united [i, "n.x"])
acceptance_rates[i] <- count/tot*100
print(acceptance_rates)
}
rates <- do.call(rbind.data.frame, acceptance_rates)
colnames(rates) <- "acceptance_rates"
united["acceptance_rates"] <- rates$acceptance_rates
acceptance_overall <- ggplot(accepted_only, aes(x = offer, y = perc, fill = offer)) + geom_col() + coord_cartesian(ylim = c(0,100))
print(acceptance_overall)
acceptance_stim <- ggplot(united, aes(x = stim_type, y = acceptance_rates, fill = stim_type)) + geom_col() +
facet_grid(~offer)
print(acceptance_stim)
trust <- final_data %>%
group_by(subj_id) %>%
filter(game == "trust") %>%
mutate(rating_binned = floor((response *.5 )/2)) %>%
mutate(rating_binned2 = ifelse(response <=4, 1,
ifelse(response %in% 5:7, 2,
ifelse(response >= 8, 3, 0)))) %>%
mutate(rating1 = ifelse(response <= 4, .5, -.5 ),
rating2 = ifelse(response == 7 | response == 6| response ==5, .5, -.5), rating3 = ifelse(response >= 8, .5,-.5))
trust %>%
filter(response == 9) %>%
count() %>%
ungroup()
aggregate( ~ name, data = bevs, mean)
View(trust)
trust <- final_data %>%
group_by(subj_id) %>%
filter(game == "trust") %>%
mutate(rating_binned2 = ifelse(response <=4, 1,
ifelse(response %in% 5:7, 2,
ifelse(response >= 8, 3, 0)))) %>%
mutate(rating1 = ifelse(response <= 4, .5, -.5 ),
rating2 = ifelse(response == 7 | response == 6| response ==5, .5, -.5), rating3 = ifelse(response >= 8, .5,-.5))
ultimatum_no_computer <- ultimatum %>%
filter(stim_type != "computer") %>%
select(stim_type, stim1, subj_id, acceptance, offer)
rating <- trust %>%
group_by(stim1) %>%
select(rating_binned, subj_id, stim_type)
trust <- final_data %>%
group_by(subj_id) %>%
filter(game == "trust") %>%
mutate(rating_binned = ifelse(response <=4, 1,
ifelse(response %in% 5:7, 2,
ifelse(response >= 8, 3, 0)))) %>%
mutate(rating1 = ifelse(response <= 4, .5, -.5 ),
rating2 = ifelse(response == 7 | response == 6| response ==5, .5, -.5), rating3 = ifelse(response >= 8, .5,-.5))
ultimatum_no_computer <- ultimatum %>%
filter(stim_type != "computer") %>%
select(stim_type, stim1, subj_id, acceptance, offer)
rating <- trust %>%
group_by(stim1) %>%
select(rating_binned, subj_id, stim_type)
rating_mod <- trust %>%
group_by(stim1) %>%
select(rating1, rating2, rating3, subj_id, stim_type)
joined_mod <- merge(rating_mod, ultimatum_no_computer)
rat_mod_2 <- joined_mod %>%
filter(offer < 3) %>%
mutate(offer1 = ifelse(offer==1, .5, -.5),
stim_type_b = ifelse(stim_type == "brand", .5, -.5)) %>%
select(stim1, subj_id, stim_type_b, offer1, rating1, rating2, acceptance)
joined <- merge(rating, ultimatum_no_computer)
join_summary <- joined %>%
group_by(rating_binned, stim_type, offer) %>%
summarise(p = mean(acceptance))
join2 <- joined %>%
group_by(rating_binned, stim_type) %>%
summarise(p = mean(acceptance))
plot2 <- ggplot(join2, aes(rating_binned, p, colour=stim_type)) +
geom_line() +   geom_point() +   coord_cartesian(ylim = c(0, 1)) +
labs(y = "probability")
print(plot2)
plot <- ggplot(join_summary, aes(rating_binned, p, colour=stim_type)) +
geom_line() +   geom_point() +   coord_cartesian(ylim = c(0, 1)) +
labs(y = "probability") + facet_grid(~offer)
print(plot)
print(join2)
plot_join <- ggplot(join2, aes(x = stim_type, y = p, fill = stim_type)) + geom_col() +
facet_grid(~rating_binned)
print(plot_join)
model_trust <- glmer(acceptance ~ offer1 * stim_type_b * (rating1 + rating3) + (offer1 * stim_type_b ||subj_id) + (offer1 || stim1), rat_mod_2, binomial, control=glmerControl(optimizer="bobyqa", optCtrl= list(maxfun=100000)))
View(rat_mod_2)
rat_mod_2 <- joined_mod %>%
filter(offer < 3) %>%
mutate(offer1 = ifelse(offer==1, .5, -.5),
stim_type_b = ifelse(stim_type == "brand", .5, -.5)) %>%
select(stim1, subj_id, stim_type_b, offer1, rating1, rating3, acceptance)
model_trust <- glmer(acceptance ~ offer1 * stim_type_b * (rating1 + rating3) + (offer1 * stim_type_b ||subj_id) + (offer1 || stim1), rat_mod_2, binomial, control=glmerControl(optimizer="bobyqa", optCtrl= list(maxfun=100000)))
summary(model_trust)
mod_trust2 <- update(model_trust, . ~ . -offer1)
anova(model_trust, mod_trust2) # test main effect of first factor
mod_trust4 <- update(model_trust, .~ . -rating1 -rating3)
anova(model_trust, mod_trust4) ## test main effect of third factor
mod_trust_inter <- update(model_trust, . ~ . -offer1:stim_type_b - offer1:rating1 - offer1:rating3 - stim_type_b:rating1 - stim_type_b:rating3)
anova(model_trust, mod_trust_inter) # test interaction
mod_new <- glmer(acceptance ~ (rating1 + rating3) * stim_type_b + (stim_type_b || subj_id), rat_mod_2, binomial, control=glmerControl(optimizer="bobyqa", optCtrl= list(maxfun=100000)))
summary(mod_new)
ultim_RT <- ultimatum %>%
group_by(subj_id, stim_type, offer) %>%
summarise(mean_rt = mean(RT), mean_p = mean(acceptance))
violinplot <- ggplot(ultim_RT, aes(offer, mean_rt)) + geom_violin()
print(violinplot)
col_plot <- ggplot(ultim_RT, aes(x = offer, y = mean_rt, fill = offer)) + geom_col() + facet_grid(~stim_type)
print(col_plot)
View(ultim_summary)
View(ultimatum)
View(ultimatum_no_computer)
View(united)
View(ultim_RT)
ultim_RT %>%
group_by(offer) %>%
print()
ultim_RT %>%
group_by(offer, stim_type) %>%
mutate(mean = mean(mean_rt)) %>%
select(stim_type, offer, mean)
ultim_RT %>%
group_by(offer, stim_type) %>%
mutate(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean)
ultim_RT %>%
group_by(offer, stim_type) %>%
mutate(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD)
print() %>%
head(9)
print() %>%
col_plot_no_out <- ggplot(rem_outlier_rt, aes(x = offer, y = mean_rt, fill = offer)) + geom_col() + facet_grid(~stim_type)
ultim_RT %>%
group_by(offer, stim_type) %>%
summarise(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD)
ultim_RT %>%
group_by(offer, stim_type) %>%
summarise(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD) %>%
print()
col_plot_no_out <- ggplot(plot, aes(x = offer, y = mean, fill = offer)) + geom_col() + facet_grid(~stim_type)
plot_rt <- ultim_RT %>%
group_by(offer, stim_type) %>%
summarise(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD) %>%
print()
col_plot_no_out <- ggplot(plot_rt, aes(x = offer, y = mean, fill = offer)) + geom_col() + facet_grid(~stim_type)
plot__ <- ggplot(plot_rt, aes(x = offer, y = mean, fill = offer)) + geom_col() + facet_grid(~stim_type)
print(plot__)
plot_rt <- rem_outlier_rt %>%
group_by(offer, stim_type) %>%
summarise(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD) %>%
print()
rem_outlier_rt <- ultim_RT %>%
filter(mean_rt < 6000)
plot_rt <- rem_outlier_rt %>%
group_by(offer, stim_type) %>%
summarise(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD) %>%
print()
plot__ <- ggplot(plot_rt, aes(x = offer, y = mean, fill = offer)) + geom_col() + facet_grid(~stim_type)
print(plot__)
mod_rt <- lmer(mean_rt ~ (offer_1 + offer_2) * (brand + human) + ( (offer_1 + offer_2) * (brand + human)||subj_id), ultim_RT_recode)
ultim_RT_recode <- rem_outlier_rt %>%
mutate(offer_1 = ifelse(offer == "1", .5, -.5),
offer_2 = ifelse(offer == "2", .5, -.5),
brand = ifelse(stim_type == "brand", .5, -.5),
human = ifelse(stim_type == "human", .5, -5))
mod_rt <- lmer(mean_rt ~ (offer_1 + offer_2) * (brand + human) + ( (offer_1 + offer_2) * (brand + human)||subj_id), ultim_RT_recode)
summary(mod_rt)
anova(mod_rt, rt_offer_mod) # test main effect of first factor
rt_offer_mod <- update(mod_rt, . ~ . -offer_1 -offer_2)
anova(mod_rt, rt_offer_mod) # test main effect of first factor
plot_rt <- rem_outlier_rt %>%
group_by(offer, stim_type) %>%
summarise(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD) %>%
print()
plot345<- plot_rt %>%
group_by(offer) %>%
summarise()
plot345<- plot_rt %>%
group_by(offer) %>%
summarise() %>%
print()
plot345<- plot_rt %>%
group_by(offer) %>%
summarise(mean) %>%
print()
plot_rt <- rem_outlier_rt %>%
group_by(offer, stim_type) %>%
summarise(mean = mean(mean_rt),
SD = sd(mean_rt)) %>%
select(stim_type, offer, mean, SD) %>%
print()
(1318+1177+1248)/3
(1478+1244+1563)/3
1428-1240
rt_stim_mod <- update(mod_rt, . ~ . -brand - human)
anova(mod_rt, rt_stim_mod) # test main effect of second factor
print(col_plot_no_out)
plot__ <- ggplot(plot_rt, aes(x = offer, y = mean, fill = offer)) + geom_col() + facet_grid(~stim_type)
print(plot__)
rt_interaction_mod <- update(mod_rt, . ~ . -offer_1:brand - offer_1:human - offer_2:brand - offer_2:human)
anova(mod_rt, rt_interaction_mod) # test interaction
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
for (i in 1:length(united$n.y)) {
count <- (united[i, "n.y"])
tot <- (united [i, "n.x"])
acceptance_rates[i] <- count/tot*100
}
rates <- do.call(rbind.data.frame, acceptance_rates)
colnames(rates) <- "acceptance_rates"
options(contrasts = c("contr.sum","contr.poly"))
mod_rt <- aov(mean_rt ~ stim_type*offer + Error(subj_id), ultim_RT_recode)
summary(mod_rt)
View(ultim_RT_recode)
mod_rt <- aov(mean_rt ~ stim_type*offer + Error(subj_id/(stim_type*offer)), ultim_RT_recode)
summary(mod_rt)
mod_rt <- aov(mean_rt ~ stim_type*offer + Error(subj_id), ultim_RT_recode)
summary(mod_rt)
anova(mod_rt, rt_stim_mod) # test main effect of second factor
rt_stim_mod <- update(mod_rt, . ~ . -brand - human)
a <- ggplot(join2, aes(rating_binned, p, colour=stim_type)) + geom_boxplot()
print(a)
install.packages("pdflatex")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lme4)
library(scales)
results = list.files(pattern = ".csv")
data = lapply(results, read.csv, header = FALSE, stringsAsFactors = FALSE)
data_frame <- do.call("rbind", data)
###Gender <- data_frame[-1: -2, ] %>%
# select(V30, V33) %>%
#filter(V30 == 2)
####Nationality <- data_frame[-1: -2, ] %>%
# select(V30, V33) %>%
# filter(V30 == 3)
## data_frame$V33 <- as.numeric(data_frame$V33)
## Age <- data_frame[-1: -2, ] %>%
## select(V30, V33) %>%
## filter(V30 == 1) %>%
## summarise(mean_age = mean(V33), SD = sd(V33))
data_frame <- data_frame[-1: -2, ] %>%  ## remove first 2 rows (completion code)
dplyr::select(V2, V7, V27, V28, V29, V33, V34)  ## and select relevant columns
colnames(data_frame) <- data_frame[1,]   ####### set the first row to be the header of the data frame
final_data <- data_frame[-1, ]
final_data <- filter(final_data, trialNo != "na", trialNo != "", trialNo != "trialNo")
final_data <- final_data %>%  # add a column for sujb_id, 275 represents n° of trials per participant
mutate("subj_id" = rep(1:55,each=275))   ### change 48 with actual number of participants
ultimatum <- final_data %>%   ## create a dataframe with only UltimatumGame results
group_by(subj_id) %>%   #### recode response as acceptance -> accepted=1, rejected = 0
filter(game == "ultimatum") %>%
dplyr::mutate(acceptance = if_else(response == 1, 0L, 1L)) %>%
dplyr::select(subj_id, everything())
box_summary <- ultimatum %>%
group_by(stim_type, subj_id, offer) %>%
dplyr::summarise(p = mean(acceptance))
View(box_summary)
accepted_only <- ultimatum %>%
filter(acceptance == 1) %>%
group_by(offer) %>%
count(acceptance) %>%
mutate(perc = n/4125*100) ## 4050 = NUMBER OF TRIALS PER PARTICIPANT BY OFFER = 75 * 54
View(accepted_only)
View(accepted_only_2)
accepted_proposer <- ultimatum %>%
dplyr::group_by(stim_type) %>%
dplyr::summarise(mean = mean(acceptance))
View(accepted_proposer)
logit_to_p(0.416 + 0.381)
odds <- exp(logit)
## homemade function to turn from logit (model estimates eg intercept + B estimates) into probability
logit_to_p <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit_to_p(0.416 + 0.381)
logit_to_p(0.416 - 0.09)
setwd("~/Maxi/Maxi Trial")
library(tidyverse)
library(lme4)
library(scales)
results = list.files(pattern = ".csv")
data = lapply(results, read.csv, header = FALSE, stringsAsFactors = FALSE)
data_frame <- do.call("rbind", data)
data_frame <- data_frame[-1: -2, ] %>%  ## remove first 2 rows (completion code)
dplyr::select(V2, V7, V27, V28, V29, V33, V34)  ## and select relevant columns
colnames(data_frame) <- data_frame[1,]   ####### set the first row to be the header of the data frame
final_data <- data_frame[-1, ]
final_data <- filter(final_data, trialNo != "na", trialNo != "", trialNo != "trialNo")
final_data <- final_data %>%  # add a column for sujb_id, 275 represents n° of trials per participant
mutate("subj_id" = rep(1:55,each=275))   ### change 48 with actual number of participants
ultimatum <- final_data %>%   ## create a dataframe with only UltimatumGame results
group_by(subj_id) %>%   #### recode response as acceptance -> accepted=1, rejected = 0
filter(game == "ultimatum") %>%
mutate(acceptance = if_else(response == 1, 0L, 1L)) %>%
dplyr::select(subj_id, everything())
library(languageR)
modelkk <- lmer(RT ~ offer*stim_type + (1||subj_id), ultimatum)
modelkk <- lmer(RT ~ offer*stim_type + (1|subj_id), ultimatum)
ultimatum$RT <- as.numeric(ultimatum$RT)
modelkk <- lmer(RT ~ offer*stim_type + (1|subj_id), ultimatum)
summary(modelkk)
pvals.fnc(modelkk)
anova(modelkk)
install.packages("lmerTest")
install.packages("viridisLite")
install.packages("viridis")
install.packages("lmerTest")
lmerTest::anova(modelkk)
library(lmer)
library(lmerTest
library(lmerTest)
library(lmerTest)
lmerTest::summary(modelkk)
summary(modelkk)
model.RT <- lmer(RT ~ (offer1 + offer3) * (Brand + Computer) + ( (offer1 + offer3) * (Brand + Computer)||subj_id), ultimatum_dev)
ultimatum_dev <- ultimatum %>%
dplyr::mutate(offer1 = ifelse(offer == "1", 0.7, -0.3),
offer3 = ifelse(offer == "3", 0.7, -0.3)) %>%
dplyr::mutate(Brand = ifelse(stim_type == "brand", 0.7, -0.3),
Computer = ifelse(stim_type == "computer", 0.7, -0.3))
model.RT <- lmer(RT ~ (offer1 + offer3) * (Brand + Computer) + ( (offer1 + offer3) * (Brand + Computer)||subj_id), ultimatum_dev)
lmerTest::summary(model.RT)
times_a <- ultimatum %>%
dplyr::filter(stim_type == "brand")
model.times_a <- lmer(RT ~ offer + (offer|subj_id), times_a)
summary(model.times_a)
times_a <- ultimatum %>%
dplyr::filter(stim_type == "brand")
times_a$stim_type <- as.factor(times_a$stim_type)
times_a$offer <- as.factor(times_a$offer)
model.times_a <- lmer(RT ~ offer + (1|subj_id), times_a)
summary(model.times_a)
model.times_a <- lmer(RT ~ offer + (offer|subj_id), times_a)
summary(model.times_a)
times_b <- ultimatum %>%
dplyr::filter(stim_type == "computer")
times_b$offer <- as.factor(times_b$offer)
model.times_b <- lmer(RT ~ offer + (offer|subj_id), times_b)
summary(model.times_b)
###### planned contrasts for reaction times
ultimatum$offer <- as.factor(ultimatum$offer)
model_RT_overall <- lmer(RT ~ offer + (offer|subj_id), ultimatum)
summary(model_RT_overall)
ultimatum$offer <- relevel(ultimatum$offer, ref = "2")
model_RT_overall <- lmer(RT ~ offer + (offer|subj_id), ultimatum)
summary(model_RT_overall)
model45 <- lmer(RT ~ offer * stim_type + (offer * stim_type || subj_id), ultimatum)
summary(model45)
model.RT4 <- update(model.RT, . ~ . -offer1:Brand - offer1:Computer - offer3:Brand - offer3:Computer)
anova(model.RT, model.RT4) # test interaction
ultim_RT <- ultimatum %>%
dplyr::group_by(subj_id, stim_type, offer, stim1) %>%
dplyr::summarise(mean_rt = mean(RT)) %>%
dplyr::filter(RT > 200) %>%
dplyr::filter(RT < 6000)
ultim_RT <- ultimatum %>%
dplyr::group_by(subj_id, stim_type, offer, stim1) %>%
dplyr::summarise(mean_rt = mean(RT)) %>%
ungroup() %>%
dplyr::filter(RT > 200) %>%
dplyr::filter(RT < 6000)
times_a <- ultimatum %>%
dplyr::filter(stim_type == "brand")
times_a$offer <- as.factor(times_a$offer)
model.times_a <- lmer(RT ~ offer + (offer|subj_id), times_a)
summary(model.times_a)
