install.packages("tidyverse")
install.packages(libcurl)
install.packages("dplyr")
library(dplyr)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")  # you're welcome
encounters <- readRDS("encounters.rds")
creatures <- readRDS("creatures.rds")
years <- readRDS("years.rds")
my_ttest <- t.test(rnorm(20, 10, 2), rnorm(20, 11, 2), var.equal = TRUE)
## TODO: add any additional code you need here
tresults <- broom::tidy(my_ttest)
## TODO: replace the NAs with code
t_val <- tresults %>% pull (statistic)
df <- tresults %>% pull (parameter)
pval <- tresults %>% pull(p.value)
View(tresults)
View(my_ttest)
avg_height <- creatures %>%
summarise( m= mean(ne_79, na.rm = TRUE)) %>%
pull(m)
avg_height <- creatures %>%
summarise( m= mean(ne_79, na.rm = TRUE))
View(avg_height)
avg_height <- creatures %>%
summarise( m= mean(ne_79, na.rm = TRUE)) %>%
pull(m)
n_species <- encounters %>%
distinct(wi_21) %>%
nrow()
n_species <- encounters %>%
nrow(wi_21)
n_species <- encounters %>%
nrow(wi_21)
n_species <- encounters %>%
count(wi_21)
View(n_species)
n_species <- encounters %>%
distinct(wi_21)
View(n_species)
n_species <- encounters %>%
select(wi_21) %>%
nrow()
n_species <- encounters %>%
select(wi_21) %>%
nrow()
n_species <- encounters %>%
select(wi_21)
View(n_species)
n_species <- encounters %>%
select(wi_21) %>%
nrow()
vocalise <- inner_join(encounters, creatures, by = "wi_21") %>%
select(wi_21, ry_49, pj_76) %>%
group_by(ry_49) %>%
summarise(p = mean(pj_76, na.rm = TRUE)) %>%
arrange(desc(p))
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")  # you're welcome
encounters <- readRDS("encounters.rds")
creatures <- readRDS("creatures.rds")
years <- readRDS("years.rds")
my_ttest <- t.test(rnorm(20, 10, 2), rnorm(20, 11, 2), var.equal = TRUE)
## TODO: add any additional code you need here
tresults <- broom::tidy(my_ttest)
## TODO: replace the NAs with code
t_val <- tresults %>% pull (statistic)
df <- tresults %>% pull (parameter)
pval <- tresults %>% pull(p.value)
avg_height <- creatures %>%
summarise( m= mean(ne_79, na.rm = TRUE)) %>%
pull(m)
n_species <- encounters %>%
select(wi_21) %>%
nrow()
vocalise <- inner_join(encounters, creatures, by = "wi_21") %>%
select(wi_21, ry_49, pj_76) %>%
group_by(ry_49) %>%
summarise(p = mean(pj_76, na.rm = TRUE)) %>%
arrange(desc(p))
View(vocalise)
## Don't change the code below this line vvv
data_wide <- tibble(
id = 1:5,
q1 = c(1, 3, 4, 2, 3),
q2 = c(7, 3, 4, 3, 2),
q3 = c(3, 2, 4, 6, 3),
q4 = c(3, 5, 2, 6, 1)
)
## Don't change the code above this line ^^^
data_long <- data_wide %>%
gather(question, score, -id)
View(data_long)
## Don't change the code below this line vvv
data_wide <- tibble(
id = 1:5,
q1 = c(1, 3, 4, 2, 3),
q2 = c(7, 3, 4, 3, 2),
q3 = c(3, 2, 4, 6, 3),
q4 = c(3, 5, 2, 6, 1)
)
## Don't change the code above this line ^^^
data_long <- data_wide %>%
gather(question, score, -id)
View(data_wide)
data_long <- data_wide %>%
gather(question, score)
data_long <- data_wide %>%
gather(question, score, id)
data_long <- data_wide %>%
gather(question, score, id)
View(data_long)
data_long <- data_wide %>%
gather(question, score, -id)
(16*0.03) + (17*0.01) + (15*0.023) + (13*0.03) + (17*0.03) + (21*0.03) + (15 * 0.03) + (18*0.03) + (16*0.03) + (13*0.03) + (16*0.03) + (14*0.03) + (20*0.13) + (18*0.02)
16+13+21+18+16+140+190+170+160+130+160+150
1184/12
16+13+21+18+16+14+19+17+16+13+16+15
194/12
(16*0.3) + (19*0.4) + (20*0.3)
ggplot(join_summary, aes(r,p)) +
geom_smooth() + facet_grid(stim_type~offer)
library(tidyverse)
setwd("~/Maxi/Maxi Trial")
results = list.files(pattern = ".csv")  ### list the files with extension .csv
data = lapply(results, read.csv, header = FALSE, stringsAsFactors = FALSE)  ## read them all in one list
data1 <- do.call("rbind", data) ## join data frames in the list in a singular data.frame
data1 <- data1[-1: -2, ]  ## remove first 2 rows (completion code)
dat <- data1 %>%
select(V2, V7, V27, V28, V29, V33, V34) ### select relevant columns
colnames(dat) <- dat[1,]   ####### set the first row to be the header of the data frame
dat2 <- dat[-1, ]
dat3 <- filter(dat2, trialNo != "na", trialNo != "", trialNo != "trialNo") ### get rid of more useless shit
dat3$RT <- as.numeric(dat3$RT)      ###### set some variables to be as.numeric for future things
dat3$response <- as.numeric(dat3$response)
dat3<- dat3 %>%                         #### add a column for sujb_id, change 275 with n° of trials per participant
mutate("subj_id" = rep(1:5,each=275))   ### change 5 with actual number of participants
ultimatum <- dat3 %>%                  ##### create a dataframe with only UltimatumGame results +
group_by(subj_id) %>%          ########## recode response as acceptance -> accepted=1, rejected = 0
filter(game == "ultimatum") %>%
mutate(acceptance = if_else(response == 1, 0L, 1L)) %>%
mutate(RT_S = RT / 1000)
library(psych)
d <- describe(ultimatum)
View(d)
ultimatum$subj_id <- factor(ultimatum$subj_id)
ultimatum$stim_type <- factor(ultimatum$stim_type)
ultimatum$offer <- factor(ultimatum$offer)
mod <- aov(acceptance ~ stim_type * offer + Error(subj_id / (stim_type * offer)), ultimatum)
summary(mod)
cell_means<- with(ultimatum, aggregate(x = list(mean_acceptance = acceptance),
by= list(stim_type = stim_type, offer = offer), FUN = mean))
cell_means2 <- cell_means %>%
mutate(SD = sqrt( cell_means$mean_acceptance * ( 1 - cell_means$mean_acceptance)))
##### or try this
cell_means <- aggregate(acceptance ~ stim_type + offer, ultimatum, mean)
cell_means %>%
ggplot(aes(stim_type, mean_acceptance)) +
geom_line(aes(group = stim_type)) +
geom_point(aes(shape = stim_type), size = 3) +
facet_wrap(~offer, scales = "free_y") +
labs(shape = "Ultimatum Offers", x = "Stimulus Type")
ggplot(cell_means, aes(stim_type, mean_acceptance, linetype = offer, shape = offer, group = offer)) +
geom_line() + geom_point() + facet_grid(~offer)
mt <- model.tables(mod, type = "mean")
mod_sum <- summary(mod)
round(mod_sum[[4]][[1]]$`Mean Sq`, 3)
trust <- dat3 %>%
group_by(subj_id) %>%         #### create a df with trust game results only +
filter(game == "trust") %>%    ###### bin ratings of trustworthiness in 3 categories:
mutate(rating_binned = floor((response + 1.5) /3))      # split = [0,10,20,30]= 1
##### plot frequency of acceptance in UG per proposer category (human/brand/computer)
ultim_summary <- ultimatum %>%
group_by(stim_type, offer) %>%
summarise(p = mean(acceptance))
ggplot(ultim_summary, aes(stim_type, p)) + geom_boxplot() #### boxplots not considering offers
trust_binned <- trust %>% ###### still need to figure out if I actually need this
group_by(stim_type, subj_id) %>%
summarise(p2 = mean(rating_binned))
U2 <- ultimatum %>%
filter(stim_type != "computer") %>%
select(stim_type, stim1, subj_id, acceptance, offer)
U2$subj_id <- factor(U2$subj_id)
trust$subj_id <- factor(trust$subj_id)
trust$offer <- factor(trust$offer)
trust$stim_type <- factor(trust$stim_type)
rating <- trust %>%
group_by(stim1) %>%
select(response, subj_id, stim1)
joined <- merge(rating, U2)
join_summary <- joined %>%
group_by(stim_type, stim1, offer) %>%
summarise(p = mean(acceptance), r = mean(response))
ggplot(join_summary, aes(r,p)) +
geom_smooth() + facet_grid(stim_type~offer)
join_summary <- joined %>%
group_by(stim_type, stim1, offer) %>%
summarise(p = mean(acceptance), r = mean(response))
ggplot(ultim_summary, aes(stim_type, p)) + geom_boxplot() #### boxplots not considering offers
##### plot frequency of acceptance in UG per proposer category (human/brand/computer)
ultim_summary <- ultimatum %>%
group_by(stim_type, offer) %>%
summarise(p = mean(acceptance))
ultimatum <- dat3 %>%                  ##### create a dataframe with only UltimatumGame results +
group_by(subj_id) %>%          ########## recode response as acceptance -> accepted=1, rejected = 0
filter(game == "ultimatum") %>%
mutate(acceptance = if_else(response == 1, 0L, 1L)) %>%
mutate(RT_S = RT / 1000)
dat3<- dat3 %>%                         #### add a column for sujb_id, change 275 with n° of trials per participant
mutate("subj_id" = rep(1:5,each=275))   ### change 5 with actual number of participants
dat3<- dat3 %>%                         #### add a column for sujb_id, change 275 with n° of trials per participant
mutate("subj_id" = rep(1:6,each=275))   ### change 5 with actual number of participants
ultimatum <- dat3 %>%                  ##### create a dataframe with only UltimatumGame results +
group_by(subj_id) %>%          ########## recode response as acceptance -> accepted=1, rejected = 0
filter(game == "ultimatum") %>%
mutate(acceptance = if_else(response == 1, 0L, 1L)) %>%
mutate(RT_S = RT / 1000)
library(psych)
d <- describe(ultimatum)
View(d)
ultimatum$subj_id <- factor(ultimatum$subj_id)
ultimatum$stim_type <- factor(ultimatum$stim_type)
ultimatum$offer <- factor(ultimatum$offer)
mod <- aov(acceptance ~ stim_type * offer + Error(subj_id / (stim_type * offer)), ultimatum)
summary(mod)
cell_means<- with(ultimatum, aggregate(x = list(mean_acceptance = acceptance),
by= list(stim_type = stim_type, offer = offer), FUN = mean))
cell_means2 <- cell_means %>%
mutate(SD = sqrt( cell_means$mean_acceptance * ( 1 - cell_means$mean_acceptance)))
##### or try this
cell_means <- aggregate(acceptance ~ stim_type + offer, ultimatum, mean)
cell_means %>%
ggplot(aes(stim_type, mean_acceptance)) +
geom_line(aes(group = stim_type)) +
geom_point(aes(shape = stim_type), size = 3) +
facet_wrap(~offer, scales = "free_y") +
labs(shape = "Ultimatum Offers", x = "Stimulus Type")
ggplot(cell_means, aes(stim_type, mean_acceptance, linetype = offer, shape = offer, group = offer)) +
geom_line() + geom_point() + facet_grid(~offer)
cell_means<- with(ultimatum, aggregate(x = list(mean_acceptance = acceptance),
by= list(stim_type = stim_type, offer = offer), FUN = mean))
cell_means2 <- cell_means %>%
mutate(SD = sqrt( cell_means$mean_acceptance * ( 1 - cell_means$mean_acceptance)))
##### or try this
cell_means <- aggregate(acceptance ~ stim_type + offer, ultimatum, mean)
cell_means %>%
ggplot(aes(stim_type, mean_acceptance)) +
geom_line(aes(group = stim_type)) +
geom_point(aes(shape = stim_type), size = 3) +
facet_wrap(~offer, scales = "free_y") +
labs(shape = "Ultimatum Offers", x = "Stimulus Type")
ggplot(cell_means, aes(stim_type, mean_acceptance, linetype = offer, shape = offer, group = offer)) +
geom_line() + geom_point() + facet_grid(~offer)
cell_means<- with(ultimatum, aggregate(x = list(mean_acceptance = acceptance),
by= list(stim_type = stim_type, offer = offer), FUN = mean))
cell_means2 <- cell_means %>%
mutate(SD = sqrt( cell_means$mean_acceptance * ( 1 - cell_means$mean_acceptance)))
View(cell_means2)
ggplot(cell_means2, aes(stim_type, mean_acceptance, linetype = offer, shape = offer, group = offer)) +
geom_line() + geom_point() + facet_grid(~offer)
mt <- model.tables(mod, type = "mean")
mod_sum <- summary(mod)
round(mod_sum[[4]][[1]]$`Mean Sq`, 3)
trust <- dat3 %>%
group_by(subj_id) %>%         #### create a df with trust game results only +
filter(game == "trust") %>%    ###### bin ratings of trustworthiness in 3 categories:
mutate(rating_binned = floor((response + 1.5) /3))      # split = [0,10,20,30]= 1
##### plot frequency of acceptance in UG per proposer category (human/brand/computer)
ultim_summary <- ultimatum %>%
group_by(stim_type, offer) %>%
summarise(p = mean(acceptance))
ggplot(ultim_summary, aes(stim_type, p)) + geom_boxplot() #### boxplots not considering offers
trust_binned <- trust %>% ###### still need to figure out if I actually need this
group_by(stim_type, subj_id) %>%
summarise(p2 = mean(rating_binned))
U2 <- ultimatum %>%
filter(stim_type != "computer") %>%
select(stim_type, stim1, subj_id, acceptance, offer)
U2$subj_id <- factor(U2$subj_id)
trust$subj_id <- factor(trust$subj_id)
trust$offer <- factor(trust$offer)
trust$stim_type <- factor(trust$stim_type)
rating <- trust %>%
group_by(stim1) %>%
select(response, subj_id, stim1)
joined <- merge(rating, U2)
join_summary <- joined %>%
group_by(stim_type, stim1, offer) %>%
summarise(p = mean(acceptance), r = mean(response))
ggplot(join_summary, aes(r,p)) +
geom_smooth() + facet_grid(stim_type~offer)
summary(mod2)
mod2 <- aov(acceptance ~ stim_type * offer * response + Error(subj_id / (stim_type * offer*response)), joined)
summary(mod2)
ggplot(join_summary, aes(r,p)) +
geom_smooth() + geom_line() + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) +
geom_smooth() + geom_jitter() + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) +
geom_smooth(method = lm) + geom_jitter() + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) +
geom_smooth(method = lm) + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) +
geom_boxplot() + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) +
geom_boxplot(aes(group = stim_type)) + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) +
geom_line() + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) +
geom_line() + geom_smooth(method = "auto") + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r, p)) +
geom_line(aes(y = stim_type, colour = "var0")) +
geom_line(aes(y = offer, colour = "var1"))
join_summary <- joined %>%
group_by(stim_type, stim1, offer) %>%
summarise(p = mean(acceptance), r = mean(response))
View(join_summary)
ggplot(join_summary, aes(r,p)) +
geom_line() + geom_smooth(method = "auto") + facet_grid(stim_type~offer)
ggplot(join_summary, aes(r,p)) + geom_smooth(method = "auto") + facet_grid(stim_type~offer)
spread_summary <- join_summary %>%
spread(stim_type, "brand", "human", fill = p)
spread_summary <- join_summary %>%
spread(stim_type, p)
View(spread_summary)
ggplot(spread_summary, aes(r)) +
geom_line(aes(y = human, colour = "var0")) +
geom_line(aes(y = brand, colour = "var1"))
ggplot(join_summary, aes(r,p)) + geom_smooth(method = "auto") +
geom_line(shape = brand)+ facet_grid(brand~offer)
ggplot(data=join_summary,
aes(x=r, y=p, colour=stim_type)) +
geom_line() + geom_smooth()
ggplot(data=join_summary,
aes(x=r, y=p, colour=stim_type)) + geom_smooth() +  facet_grid(~offer)
ggplot(data=join_summary,
aes(x=r, y=p, colour=stim_type)) + geom_smooth(method = lm) +  facet_grid(~offer)
View(trust)
trust <- dat3 %>%
group_by(subj_id) %>%         #### create a df with trust game results only +
filter(game == "trust") %>%    ###### bin ratings of trustworthiness in 3 categories:
mutate(rating_binned = floor((response + .5) /2.5))      # split = [0,10,20,30]= 1
trust <- dat3 %>%
group_by(subj_id) %>%         #### create a df with trust game results only +
filter(game == "trust") %>%    ###### bin ratings of trustworthiness in 3 categories:
mutate(rating_binned = floor((response + .5) /2.5))      # split = [0,10,20,30]= 1
trust <- dat3 %>%
group_by(subj_id) %>%         #### create a df with trust game results only +
filter(game == "trust") %>%    ###### bin ratings of trustworthiness in 3 categories:
mutate(rating_binned = floor((response + .5) /3.5))      # split = [0,10,20,30]= 1
rating <- trust %>%
group_by(stim1) %>%
select(rating_binned, subj_id, stim1)
joined <- merge(rating, U2)
join_summary <- joined %>%
group_by(stim_type, stim1, offer, rating_binned) %>%
summarise(p = mean(acceptance))
View(join_summary)
ggplot(data=join_summary,
aes(x= rating_binned, y=p, colour=stim_type)) + geom_smooth(method = lm) +  facet_grid(~offer)
ggplot(data=join_summary,
aes(x= rating_binned, y=p, colour=stim_type)) + geom_smooth(method = auto) +  facet_grid(~offer)
ggplot(data=join_summary,
aes(x= rating_binned, y=p, colour=stim_type)) + geom_smooth(method = "auto") +  facet_grid(~offer)
warnings()
+ ylim = (0,1)
+ coord_cartesian(ylim = (0,1))
+ coord_cartesian(ylim = (0, 1))
+ coord_cartesian(ylim = c(0, 1))
+ coord_cartesian(ylim = c(0,1))
+ coord_cartesian(ylim = c(0,1))
+ coord_cartesian( ylim = c(0,1))
ggplot(data=join_summary,
aes(x= rating_binned, y=p, colour=stim_type)) + geom_smooth(method = "auto") +  facet_grid(~offer)
ggplot(join_summary, aes(x=rating_binned,y=p, colour=stim_type)) +
stat_smooth(method="loess", span=0.1, se=TRUE, aes(fill=stim_type), alpha=0.3) +
theme_bw()
rating <- trust %>%
group_by(stim1) %>%
select(response, subj_id, stim1)
joined <- merge(rating, U2)
join_summary <- joined %>%
group_by(stim_type, stim1, offer) %>%
summarise(p = mean(acceptance), t = mean(response))
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
stat_smooth(method="loess", span=0.1, se=TRUE, aes(fill=t), alpha=0.3) +
theme_bw()
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", span=0.1, se=TRUE, aes(fill=t), alpha=0.3) +
theme_bw()
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", span=0.1, se=TRUE, aes(fill=t), alpha=0.3) +
theme_bw()
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), alpha=0.3) +
theme_bw()
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), alpha=0.2) +
theme_bw()
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), alpha=0.2) +
theme_bw() + facet_grid(~offer)
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), span = 0.1, alpha=0.2) +
theme_bw() + facet_grid(~offer)
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), span = 0.5, alpha=0.2) +
theme_bw() + facet_grid(~offer)
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), span = 0.4, alpha=0.2) +
theme_bw() + facet_grid(~offer)
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), span = 0.6, alpha=0.2) +
theme_bw() + facet_grid(~offer)
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), span = 0.8, alpha=0.2) +
theme_bw() + facet_grid(~offer)
ggplot(join_summary, aes(x=t,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=t), span = 0.8, alpha=0.2) +
theme_bw() + facet_grid(~offer) +
coord_cartesian(xlim = NULL, ylim = c(0,1.0))
rating <- trust %>%
group_by(stim1) %>%
select(rating_binned, subj_id, stim1)
joined <- merge(rating, U2)
join_summary <- joined %>%
group_by(stim_type, stim1, offer, rating_binned) %>%
summarise(p = mean(acceptance))
ggplot(join_summary, aes(x=rating_binned,y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=rating_binned), span = 0.8, alpha=0.2) +
theme_bw() + facet_grid(~offer) +
coord_cartesian(xlim = NULL, ylim = c(0,1.0))
mod2 <- aov(acceptance ~ stim_type * offer * rating_binned + Error(subj_id / (stim_type * offer*response)), joined)
mod2 <- aov(acceptance ~ stim_type * offer * rating_binned + Error(subj_id / (stim_type * offer*rating_binned)), joined)
summary(mod2)
View(dat3)
View(ultimatum)
ultim_RT <- ultimatum %>%
group_by(stim_type, offer) %>%
summarise(p = mean(acceptance), mean_rt = mean(RT))
View(ultim_RT)
ggplot(ultim_RT, aes(x=mean_rt, y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill=rating_binned), span = 0.8, alpha=0.2) +
theme_bw() + facet_grid(~offer) +
coord_cartesian(xlim = NULL, ylim = c(0,1.0))
ggplot(ultim_RT, aes(x=mean_rt, y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill= mean_rt), span = 0.8, alpha=0.2) +
theme_bw() + facet_grid(~offer) +
coord_cartesian(xlim = NULL, ylim = c(0,1.0))
ggplot(ultim_RT, aes(x=mean_rt, y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill= mean_rt), span = 0.1, alpha=0.2) +
theme_bw() + facet_grid(~offer) +
coord_cartesian(xlim = NULL, ylim = c(0,1.0))
ggplot(ultim_RT, aes(x=mean_rt, y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill= mean_rt), span = 2, alpha=0.2) +
theme_bw() + facet_grid(~offer) +
coord_cartesian(xlim = NULL, ylim = c(0,1.0))
ultim_RT <- ultimatum %>%
group_by(stim_type, offer) %>%
summarise(p = mean(acceptance), mean_rt = mean(RT))
ggplot(ultim_RT, aes(x=mean_rt, y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill= mean_rt), span = 2, alpha=0.2) +
theme_bw() + facet_grid(~offer) +
coord_cartesian(xlim = NULL, ylim = c(0,1.0))
ggplot(ultim_RT, aes(x=mean_rt, y=p, colour=stim_type)) +
geom_smooth(method="loess", aes(fill= mean_rt), span = 2, alpha=0.2) +
theme_bw() + facet_grid(~offer)
ggplot(ultim_RT, aes(mean_rt)) + geom_line() + facet_grid(~offer)
ggplot(ultim_RT, aes(mean_rt)) + geom_line(mean_rt) + facet_grid(~offer)
ggplot(ultim_RT, aes(mean_rt)) + geom_line(~mean_rt) + facet_grid(~offer)
ggplot(ultim_RT, aes(mean_rt)) + geom_col(position = "dodge") + facet_grid(~offer)
ggplot(ultim_RT, aes(stim_type, mean_rt)) + geom_col(position = "dodge") + facet_grid(~offer)
ggplot(join_summary, aes(stim_type, p)) + geom_col(position = "dodge") + facet_grid(~offer)
ggplot(ultim_RT, aes(stim_type, mean_rt)) + geom_col(position = "dodge") + facet_grid(~offer)
ultim_RT <- ultimatum %>%
group_by(stim_type, offer, acceptance) %>%
summarise(mean_rt = mean(RT))
View(ultim_RT)
ggplot(ultim_RT, aes(x = acceptance, y = mean_rt)) + geom_col(position = "dodge") +
facet_grid(stim_type~offer)
ggplot(ultim_RT, aes(x = acceptance, y = mean_rt, colour = stim_type)) + geom_col(position = "dodge") +
facet_grid(~offer)
ggplot(ultim_RT, aes(x = acceptance, y = mean_rt, colour = stim_type)) + geom_col(position = "dodge") +
facet_grid(~offer) + coord_cartesian(xlim = c(0,1))
library(plyr)
theme_set(theme_bw())
theme_update(panel.border = element_blank())
